[{"path":"https://michaeltopper1.github.io/panelsummary/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://michaeltopper1.github.io/panelsummary/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://michaeltopper1.github.io/panelsummary/articles/adding_rows.html","id":"panelsummarypanelsummary_raw","dir":"Articles","previous_headings":"","what":"panelsummary::panelsummary_raw","title":"Adding Rows to a panelsummary Table","text":"panelsummary::panelsummary_raw function returns dataframe can manipulated. trade-table need customized using kableExtra package, although customization can completed using panelsummary::clean_raw function (see example).","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/articles/adding_rows.html","id":"workflow","dir":"Articles","previous_headings":"","what":"Workflow","title":"Adding Rows to a panelsummary Table","text":"want create table panels additional statistical rows, workflow following: Estimate models (preferably fixest package). Pass models panelsummary::panelsummary_raw get manipulable dataframe. Manipulate dataframe (preferably dplyr::add_row). Use panelsummary::clean_raw return kableExtra object. Use kableExtra::pack_rows create panel labels.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/articles/adding_rows.html","id":"example-adding-additional-rows-to-each-panel","dir":"Articles","previous_headings":"","what":"Example: Adding Additional Rows to Each Panel","title":"Adding Rows to a panelsummary Table","text":"demonstrate add row panel panelsummary::panelsummary_raw table, assume panel needs one additional row wild-cluster-bootstrap p-values cyl column mtcars data. explicitly calculate (fact, completely made ), following steps show complete task. Consider following models, estimated using fixest package: Recall putting two models list result multiple specifications per-panel. Now, pass two lists panelsummary::panelsummary_raw. Note function shares many arguments panelsummary::panelsummary. following, also use arguments stars (significance stars), mean_dependent (dependent variable mean), gof_omit (omit \\(R^2\\) statistics): return value output dataframe without panel labels. Given dataframe, can use dplyr functions easily manipulate. instance, use dplyr::add_rows function add pseudo wild-cluster-bootstrap p-values table: Now dataframe ready passed kableExtra::kbl customize panel headers/column names etc. Alternatively, can use panelsummary::clean_raw function get desirable traits speed process. particular, panelsummary::clean_raw function following default: Passes dataframe kableExtra::kbl Changes alignment Left first column, Center remaining columns. Changes names columns blank white space first column, consecutive numbers remaining columns. However, can also pass caption using caption argument: customized panelsummary table added rows.   Finally, get desired panel labels, need use kableExtra::pack_rows: customized panelsummary table added rows.","code":"library(panelsummary)  ## Panel A: mpg dependent variable mpg_1 <- fixest::feols(mpg ~cyl + disp, data = mtcars) mpg_2 <- fixest::feols(mpg ~ cyl + am, data = mtcars)  ## Panel B: wt dependent variable wt_1 <- fixest::feols(wt ~ cyl + disp, data = mtcars) wt_2 <- fixest::feols(wt ~ cyl + am, data = mtcars) ## putting each panel's models into a list—one for each panel panel_a_mpg <- list(mpg_1, mpg_2) panel_b_wt <- list(wt_1, wt_2) ## creating the dataframe panelsummary_raw(panel_a_mpg, panel_b_wt,                  stars = \"econ\",                  mean_dependent = T,                  gof_omit = \"^R\") #>                          term   Model 1   Model 2 #> 1                 (Intercept) 34.661*** 34.522*** #> 2                               (2.547)   (2.603) #> 3                         cyl  -1.587** -2.501*** #> 4                               (0.712)   (0.361) #> 5                        disp   -0.021*           #> 6                               (0.010)           #> 7                          am              2.567* #> 8                                         (1.291) #> 9  Mean of Dependent Variable    20.091    20.091 #> 10                   Num.Obs.        32        32 #> 11                        AIC     165.1     165.2 #> 12                        BIC     169.5     169.6 #> 13                 Std.Errors       IID       IID #> 14                (Intercept)  1.773***  1.566*** #> 15                              (0.386)   (0.453) #> 16                        cyl    -0.054  0.317*** #> 17                              (0.108)   (0.063) #> 18                       disp  0.008***           #> 19                              (0.002)           #> 20                         am           -0.765*** #> 21                                        (0.225) #> 22 Mean of Dependent Variable     3.217     3.217 #> 23                   Num.Obs.        32        32 #> 24                        AIC      44.4      53.3 #> 25                        BIC      48.8      57.7 #> 26                 Std.Errors       IID       IID ## adding rows using dplyr::add_row bootstrap_table <- panelsummary_raw(panel_a_mpg, panel_b_wt,                  stars = \"econ\",                  mean_dependent = T,                  gof_omit = \"R\") |>    dplyr::add_row(term = \"Wild Cluster Boot P-value (cyl)\",                  `Model 1` = \".001\",                  `Model 2` = \".002\",                 .before = 10) |>    dplyr::add_row(term = \"Wild Cluster Boot P-value (cyl)\",                  `Model 1` = \".001\",                  `Model 2` = \".005\",                  .before = 22)  bootstrap_table #>                               term   Model 1   Model 2 #> 1                      (Intercept) 34.661*** 34.522*** #> 2                                    (2.547)   (2.603) #> 3                              cyl  -1.587** -2.501*** #> 4                                    (0.712)   (0.361) #> 5                             disp   -0.021*           #> 6                                    (0.010)           #> 7                               am              2.567* #> 8                                              (1.291) #> 9       Mean of Dependent Variable    20.091    20.091 #> 10 Wild Cluster Boot P-value (cyl)      .001      .002 #> 11                        Num.Obs.        32        32 #> 12                             AIC     165.1     165.2 #> 13                             BIC     169.5     169.6 #> 14                      Std.Errors       IID       IID #> 15                     (Intercept)  1.773***  1.566*** #> 16                                   (0.386)   (0.453) #> 17                             cyl    -0.054  0.317*** #> 18                                   (0.108)   (0.063) #> 19                            disp  0.008***           #> 20                                   (0.002)           #> 21                              am           -0.765*** #> 22 Wild Cluster Boot P-value (cyl)      .001      .005 #> 23                                             (0.225) #> 24      Mean of Dependent Variable     3.217     3.217 #> 25                        Num.Obs.        32        32 #> 26                             AIC      44.4      53.3 #> 27                             BIC      48.8      57.7 #> 28                      Std.Errors       IID       IID ## creating a kableExtra object with a few desirable defaults bootstrap_table |>    clean_raw(caption = \"A customized panelsummary table with added rows.\") ## creating the final panels. bootstrap_table |>    clean_raw(caption = \"A customized panelsummary table with added rows.\") |>    kableExtra::pack_rows(\"Panel A: MPG\", 1, 14,                         italic = T,                         bold = F) |>    kableExtra::pack_rows(\"Panel B: Cyl\", 15, 28,                          italic = T,                         bold = F) |>    kableExtra::footnote(list(\"* p < 0.1, ** p < 0.05, *** p < 0.01\")) |>    kableExtra::kable_classic(full_width = F, html_font = \"Cambria\")"},{"path":"https://michaeltopper1.github.io/panelsummary/articles/panelsummary.html","id":"motivating-example","dir":"Articles","previous_headings":"","what":"Motivating Example","title":"Introduction to panelsummary","text":"motivate power panelsummary, consider model using mtcars dataset: \\[ Y_{} = \\beta_0 + \\beta_1hp_i + \\beta_2cyl_i + e_i\\] \\(Y_i\\) dependent variable, can either \\(mpg_i\\) \\(disp\\) car \\(\\), \\(hp_i\\) horsepower, \\(cyl_i\\) number cylinders, \\(e_i\\) error term. estimate model dependent variables, following code provided: one option present regression coefficients table create separate regression table , concise, cleaner way present information. panelsummary useful. simple pass panelsummary::panelsummary, beautiful regression table created without additional editing, can immediately viewed RStudio Viewer panel.  Note number arguments passed ... delineation panels determined. Importantly, length character vector passed panel_labels must match number arguments passed .... ensures panel label.","code":"## estimating the model with two depedent variables: ## 1) mpg and 2) disp mpg_1 <- lm(mpg ~ hp + cyl, data = mtcars) disp_1 <- lm(disp ~ hp + cyl, data = mtcars) ## creating a beautiful regression table with panelsummary panelsummary(mpg_1, disp_1,               panel_labels = c(\"Panel A: MPG\", \"Panel B: Displacement\"))"},{"path":"https://michaeltopper1.github.io/panelsummary/articles/panelsummary.html","id":"cleaning-variable-names","dir":"Articles","previous_headings":"","what":"Cleaning Variable Names","title":"Introduction to panelsummary","text":"Behind scenes, panelsummary uses modelsummary help create regression tables. benefit ability use coef_map argument (passed modelsummary::modelsummary) clean variable names. Recall use coef_map, syntax c(\"old_name\" = \"new_name\"):  information coef_map, see modelsummary website.","code":"panelsummary(mpg_1, disp_1,               coef_map = c(\"hp\" = \"Horse Power\",                           \"cyl\" = \"Cylinder\"),              panel_labels = c(\"Panel A: MPG\", \"Panel B: Displacement\"))"},{"path":"https://michaeltopper1.github.io/panelsummary/articles/panelsummary.html","id":"excluding-goodness-of-fit-statistics","dir":"Articles","previous_headings":"","what":"Excluding Goodness-of-Fit Statistics","title":"Introduction to panelsummary","text":"Similar cleaning names, panelsummary also supports gof_map gof_omit arguments modelsummary. following, gof_map used change name “Num.Obs” “Observations” “F” “F-stat”, removing goodness--fit statistics:  information use gof_map, see modelsummary website.","code":"## mapping the goodness of fit statistics to new names - see modelsummary for more details gm <- tibble::tribble(         ~raw,      ~clean,          ~fmt,  ~omit,         \"nobs\",      \"Observations\",     0,  FALSE,         \"F\", \"F-stat\",               3,  FALSE ) panelsummary(mpg_1, disp_1,               coef_map = c(\"hp\" = \"Horse Power\",                           \"cyl\" = \"Cylinder\"),              gof_map = gm,              panel_labels = c(\"Panel A: MPG\", \"Panel B: Displacement\"))"},{"path":"https://michaeltopper1.github.io/panelsummary/articles/panelsummary.html","id":"adding-additional-models-to-the-table","dir":"Articles","previous_headings":"","what":"Adding Additional Models to the Table","title":"Introduction to panelsummary","text":"simple add additional models panel table. useful presenting robustness estimates variety different explanatory variables. example, consider three models mpg dependent variable: add models Panel , simply replace mpg_1 list(mpg_1, mpg_2, mpg_3) original code:","code":"## creating two additional models for the first panel  mpg_2 <- lm(mpg ~ hp + cyl + drat, data = mtcars) mpg_3 <- lm(mpg ~hp + cyl + drat + wt, data = mtcars) panelsummary(list(mpg_1, mpg_2, mpg_3), disp_1,               coef_map = c(\"hp\" = \"Horse Power\",                           \"cyl\" = \"Cylinder\",                           \"drat\" = \"Rear Axle Ratio\",                           \"wt\" = \"Weight (1000lbs)\"),              gof_map = gm,              panel_labels = c(\"Panel A: MPG\", \"Panel B: Displacement\"))"},{"path":"https://michaeltopper1.github.io/panelsummary/articles/panelsummary.html","id":"adding-additional-panels-to-the-table","dir":"Articles","previous_headings":"","what":"Adding Additional Panels to the Table","title":"Introduction to panelsummary","text":"alluded , number arguments passed ... determine number panels created table. Hence, simply add another argument ..., corresponding label panel_labels:    time, panelsummary support five panels. done intentionally discourage overly long table.","code":"panelsummary(list(mpg_1, mpg_2, mpg_3), disp_1, list(mpg_1, mpg_2),              coef_map = c(\"hp\" = \"Horse Power\",                           \"cyl\" = \"Cylinder\",                           \"drat\" = \"Rear Axle Ratio\",                           \"wt\" = \"Weight (1000lbs)\"),              gof_map = gm,              panel_labels = c(\"Panel A: MPG\", \"Panel B: Displacement\", \"Panel C: Demonstration of Additional Panel\"))"},{"path":"https://michaeltopper1.github.io/panelsummary/articles/panelsummary.html","id":"adding-significance-stars","dir":"Articles","previous_headings":"","what":"Adding Significance-Stars","title":"Introduction to panelsummary","text":"add significance stars, simply set stars argument TRUE. default, panelsummary uses following convention (symbol=pvalue): +=.1, *=.05, **=.01, ***=0.001. However, can also change significance stars passing vector corresponding significance:    However, plan using economics convention *=.1, **=.05, ***=.01, can simply pass word “econ”.","code":"## change the significance stars to match economic convention table_stars <- panelsummary(list(mpg_1, mpg_2, mpg_3), disp_1,               coef_map = c(\"hp\" = \"Horse Power\",                           \"cyl\" = \"Cylinder\",                           \"drat\" = \"Rear Axle Ratio\",                           \"wt\" = \"Weight (1000lbs)\"),              gof_map = gm,              stars = c('*' = .1, '**' = .05, '***' = .01),              panel_labels = c(\"Panel A: MPG\", \"Panel B: Displacement\")) table_stars"},{"path":"https://michaeltopper1.github.io/panelsummary/articles/panelsummary.html","id":"customizing-with-kableextra","dir":"Articles","previous_headings":"","what":"Customizing With kableExtra","title":"Introduction to panelsummary","text":"panelsummary::panelsummary executed, kableExtra object created. benefit feature kableExtra’s customizing functions ready pipe . instance, suppose table calls new theme, header model numbers, footnote denoting significance:","code":"library(kableExtra)  ## customizing the table with kableExtra table_stars |>    kable_classic(full_width = F, html_font = \"Cambria\") |>    add_header_above(c(\" \" = 1, \"Models Using mtcars\" = 3)) |>    footnote(list(\"* p < 0.1, ** p < 0.05, *** p < 0.01\",                 \"Customizations done using kableExtra package\"))"},{"path":"https://michaeltopper1.github.io/panelsummary/articles/panelsummary.html","id":"renaming-colnames","dir":"Articles","previous_headings":"","what":"Renaming Colnames","title":"Introduction to panelsummary","text":"default, panelsummary names first column empty space, subsequent column numbers (1), (2), (3)…etc. rename columns, use colnames argument pass character vector matches length columns table. particular example, column names set “Column 1”, “Column 2”, “Column 3”, “Column 4”. Note element vector may empty hence, single whitespace character needed give blank look (shown ):","code":"panelsummary(list(mpg_1, mpg_2, mpg_3), disp_1,               coef_map = c(\"hp\" = \"Horse Power\",                           \"cyl\" = \"Cylinder\",                           \"drat\" = \"Rear Axle Ratio\",                           \"wt\" = \"Weight (1000lbs)\"),              gof_map = gm,              stars =c('*' = .1, '**' = .05, '***' = .01),              panel_labels = c(\"Panel A: MPG\", \"Panel B: Displacement\"),              colnames = c(\"Column 1\", \"Column 2\", \"Column 3\", \"Column 4\")) |>    kable_classic(full_width = F, html_font = \"Cambria\")"},{"path":"https://michaeltopper1.github.io/panelsummary/articles/panelsummary.html","id":"italicsboldshorizontal-lines","dir":"Articles","previous_headings":"","what":"Italics/Bolds/Horizontal Lines","title":"Introduction to panelsummary","text":"labels passed panel_labels can changed bold /italics using bold italic arguments. Furthermore, horizontal lines can added label using hline_after argument.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/articles/panelsummary.html","id":"output","dir":"Articles","previous_headings":"","what":"Output","title":"Introduction to panelsummary","text":"output controlled using format argument. default, kableExtra object created works seamlessly Rmarkdown knits automatically LaTeX HTML. users prefer use LaTeX software Rmarkdown, format option can switched “latex” give corresponding LaTeX code table. Note: tables automatically set booktabs style therefore booktabs LaTeX package necessary (usepackage{booktabs}) tex file LaTeX output copy pasted.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/articles/panelsummary.html","id":"use-with-fixest","dir":"Articles","previous_headings":"","what":"Use with fixest","title":"Introduction to panelsummary","text":"panelsummary package works best fixest package fully take advantage offerings. See Using panelsummary fixest vignette. capabilities include: Collapsing fixed effects Including mean dependent variable.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/articles/panelsummary.html","id":"adding-rows-to-a-panelsummary-table","dir":"Articles","previous_headings":"","what":"Adding rows to a panelsummary table","title":"Introduction to panelsummary","text":"Adding custom rows requires different workflow rather simply calling panelsummary::panelsummary, although still quite simple. See Adding Rows panelsummary Table vignette detailed example.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/articles/with_fixest.html","id":"adding-the-mean-of-the-dependent-variable","dir":"Articles","previous_headings":"","what":"Adding the Mean of the Dependent Variable","title":"Using panelsummary with fixest","text":"start, load fixest, panelsummary, kableExtra packages. demonstration purposes, four regressions estimated fixest package using feols function mtcars data: create regression table two panels (Panel : MPG/Panel B: Displacement) two models , lists list(mpg_1, mpg_2) list(disp_1, disp_2) can passed arguments .... However, since models class fixest (.e., created fixest package), mean_dependent argument can set TRUE show means dependent variable column: Automated Mean Dependent Variable   Notice new row placed “Num.Obs.” row panel mean dependent variable. default setting. like change mean placed, need customize using panelsummary::panelsummary_raw function (see Adding Rows panelsummary Table vignette details). Now, using gof_map (see modelsummary website) goodness--fit statistics mapped/renamed. Note mean dependent variable included mapped statistics reordered without using panelsummary::panelsummary_raw. Automated Mean Dependent Variable-Renamed Reordered   Lastly, important aside, models class fixest return dependent variable mean. plans accommodate models feature future.","code":"library(panelsummary) library(fixest) ## for regressions library(kableExtra) ## for further table customization ## estimating two models for mpg mpg_1 <- mtcars |>     feols(mpg ~  cyl | gear + carb, cluster = ~hp)  mpg_2 <- mtcars |>     feols(mpg ~  cyl | gear + carb + am, cluster = ~hp)   ## estimating the same two models for disp disp_1 <- mtcars |>    feols(disp ~ cyl | gear + carb, cluster = ~hp)  disp_2 <- mtcars |>    feols(disp ~ cyl | gear + carb + am, cluster = ~hp) panelsummary(list(mpg_1, mpg_2), list(disp_1, disp_2),               mean_dependent = TRUE,              panel_labels = c(\"Panel A: MPG\", \"Panel B: Displacement\"),              caption = \"Automated Mean of Dependent Variable\") |>    kable_classic(full_width = F, html_font = \"Cambria\") ## creating a renaming tibble to pass into panelsummary  gm <- tibble::tribble(         ~raw,      ~clean,          ~fmt,  ~omit,         \"nobs\", \"Observations\", 0,  FALSE,         \"FE: gear\", \"FE: Gear\", 0, FALSE,         \"FE: carb\", \"FE: Carb\", 0, FALSE,         \"FE: am\", \"FE: AM\", 0, FALSE )  ## creating the regression table panelsummary(list(mpg_1, mpg_2), list(disp_1, disp_2),              mean_dependent = TRUE,              panel_labels = c(\"Panel A: MPG\", \"Panel B: Displacement\"),              gof_map = gm,              caption = \"Automated Mean of Dependent Variable-Renamed and Reordered\") |>    kable_classic(full_width = F, html_font = \"Cambria\")"},{"path":"https://michaeltopper1.github.io/panelsummary/articles/with_fixest.html","id":"collapsing-fixed-effects","dir":"Articles","previous_headings":"","what":"Collapsing Fixed Effects","title":"Using panelsummary with fixest","text":"Notice tables fixed effects columns (1) (2) across panel. reduce number rows, collapse_fe argument can used show separate panel containing fixed effects. Observe also warning message returned command used; warning message telling user function assumes panels fixed effects models. Collapsed Fixed Effects   Although appear HTML, LaTeX version table include horizontal line separating fixed effects panels. can switched using hline_before_fe argument.","code":"## collapsing fixed effects with collapse_fe = T panelsummary(list(mpg_1, mpg_2), list(disp_1, disp_2),              mean_dependent = TRUE,              panel_labels = c(\"Panel A: MPG\", \"Panel B: Displacement\"),              gof_map = gm,              caption = \"Collapsed Fixed Effects\",              collapse_fe = T) |>    kable_classic(full_width = F, html_font = \"Cambria\") |>    footnote(\"Collapsing the fixed effects assumes the fixed effects in all panels are the same!\") #> Warning in panelsummary(list(mpg_1, mpg_2), list(disp_1, disp_2), #> mean_dependent = TRUE, : panelsummary does not check if the fixed effects in #> each panel match. It always assumes they do!"},{"path":"https://michaeltopper1.github.io/panelsummary/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Topper. Author, maintainer. Vincent Arel-Bundock. Copyright holder.            documentation inherited 'modelsummary'","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Topper M (2023). panelsummary: Create Publication-Ready Regression Tables Panels. https://github.com/michaeltopper1/panelsummary, https://michaeltopper1.github.io/panelsummary/.","code":"@Manual{,   title = {panelsummary: Create Publication-Ready Regression Tables with Panels},   author = {Michael Topper},   year = {2023},   note = {https://github.com/michaeltopper1/panelsummary, https://michaeltopper1.github.io/panelsummary/}, }"},{"path":"https://michaeltopper1.github.io/panelsummary/index.html","id":"panelsummary","dir":"","previous_headings":"","what":"Create Publication-Ready Regression Tables with Panels","title":"Create Publication-Ready Regression Tables with Panels","text":"panelsummary creates publication-quality regression tables multiple panels. Paneled regression tables particularly useful showing output models estimated multiple dependent variables. simple call panelsummary::panelsummary create regression table can viewed RStudio Viewer panel, edited kableExtra’s suite customization functions, output latex. now, panelsummary intended use fixest package, although model classes planned. Please use panelsummary::models_supported function view list model classes currently supported.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create Publication-Ready Regression Tables with Panels","text":"can install development version panelsummary GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"michaeltopper1/panelsummary\")"},{"path":"https://michaeltopper1.github.io/panelsummary/index.html","id":"what-makes-panelsummary-different","dir":"","previous_headings":"","what":"What makes panelsummary different?","title":"Create Publication-Ready Regression Tables with Panels","text":"panelsummary can easily create beautiful paneled tables without manual editing:","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/index.html","id":"edit-with-kableextra","dir":"","previous_headings":"What makes panelsummary different?","what":"Edit with kableExtra","title":"Create Publication-Ready Regression Tables with Panels","text":"One strongest cases use panelsummary returns kableExtra object. means can easily customize table using kableExtra’s suite functions pipe operator (|>).","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/index.html","id":"use-modelsummary-arguments","dir":"","previous_headings":"What makes panelsummary different?","what":"Use modelsummary arguments","title":"Create Publication-Ready Regression Tables with Panels","text":"hood, panelsummary::panelsummary calls modelsummary::modelsummary inherits many arguments. examples arguments shared: stars - indicate significance. coef_map - subset, rename, reorder coefficients. coef_omit - use regular expressions determine coefficients omitted table. gof_map - rename, reorder, omit goodness--fit statistics.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/index.html","id":"learn-more","dir":"","previous_headings":"What makes panelsummary different?","what":"Learn more!","title":"Create Publication-Ready Regression Tables with Panels","text":"learn panelsummary, get started introductory vignette.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/add_panels.html","id":null,"dir":"Reference","previous_headings":"","what":"add panels to the regression table — add_panels","title":"add panels to the regression table — add_panels","text":"Adds panels (Panel , Panel B,...) regression tables.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/add_panels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add panels to the regression table — add_panels","text":"","code":"add_panels(   regression_table,   num_panels,   bold = FALSE,   italic = TRUE,   latex_gap_space = \"0.5cm\",   panel_labels,   rows_per_model,   hline_after = FALSE )"},{"path":"https://michaeltopper1.github.io/panelsummary/reference/add_panels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add panels to the regression table — add_panels","text":"regression_table regression table given panels . num_panels number panels regression table. Passed panelsummary. bold whether panel labels bold . italic whether panel labels italics. latex_gap_space amount space two panels. optimal spacing. panel_labels text come Panel :... Panel B:... rows_per_model number rows panels. hline_after whether add horizontal line Panel","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/add_panels_cfe.html","id":null,"dir":"Reference","previous_headings":"","what":"add panels to the regression table for collapsed_fe = T — add_panels_cfe","title":"add panels to the regression table for collapsed_fe = T — add_panels_cfe","text":"Adds panels (Panel , Panel B,...) regression tables.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/add_panels_cfe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add panels to the regression table for collapsed_fe = T — add_panels_cfe","text":"","code":"add_panels_cfe(   regression_table,   num_panels,   bold = FALSE,   italic = TRUE,   latex_gap_space = \"0.5cm\",   panel_labels,   rows_per_model,   hline_after = FALSE,   hline_before_fe = TRUE )"},{"path":"https://michaeltopper1.github.io/panelsummary/reference/add_panels_cfe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add panels to the regression table for collapsed_fe = T — add_panels_cfe","text":"regression_table regression table given panels . num_panels number panels regression table. Passed panelsummary. bold whether panel labels bold . italic whether panel labels italics. latex_gap_space amount space two panels. optimal spacing. panel_labels text come Panel :... Panel B:... rows_per_model number rows panels. hline_after whether add horizontal line Panel hline_before_fe whether horizontal line fixed effects panel occur.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/change_to_lists.html","id":null,"dir":"Reference","previous_headings":"","what":"Changes all models passed into panelsummary into a list — change_to_lists","title":"Changes all models passed into panelsummary into a list — change_to_lists","text":"Changes models passed panelsummary list","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/change_to_lists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Changes all models passed into panelsummary into a list — change_to_lists","text":"","code":"change_to_lists(models)"},{"path":"https://michaeltopper1.github.io/panelsummary/reference/change_to_lists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Changes all models passed into panelsummary into a list — change_to_lists","text":"models Input list. input list models taken user.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/change_to_lists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Changes all models passed into panelsummary into a list — change_to_lists","text":"list lists. change non-list component list.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/check_class_fixest.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks that the class of each regression is of the type ","title":"Checks that the class of each regression is of the type ","text":"`check_class_fixest` ensures class type \"fixest\" mean dependent variable can taken using fixest built-methods.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/check_class_fixest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks that the class of each regression is of the type ","text":"","code":"check_class_fixest(models)"},{"path":"https://michaeltopper1.github.io/panelsummary/reference/check_class_fixest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks that the class of each regression is of the type ","text":"models Input list. input list models taken user.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/check_class_fixest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks that the class of each regression is of the type ","text":"Boolean TRUE/FALSE indicating whether elements fixest type.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/check_dimensions_match.html","id":null,"dir":"Reference","previous_headings":"","what":"check if the dimensions work — check_dimensions_match","title":"check if the dimensions work — check_dimensions_match","text":"check dimensions work","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/check_dimensions_match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if the dimensions work — check_dimensions_match","text":"","code":"check_dimensions_match(models, panel_labels)"},{"path":"https://michaeltopper1.github.io/panelsummary/reference/check_dimensions_match.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check if the dimensions work — check_dimensions_match","text":"models regression models check dimensions panel_labels labels panel.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/clean_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Pass a panelsummary::panelsummary_raw dataframe into kableExtra::kbl() with typical defaults — clean_raw","title":"Pass a panelsummary::panelsummary_raw dataframe into kableExtra::kbl() with typical defaults — clean_raw","text":"`clean_raw` Passes panelsummary::panelsummary_raw dataframe () edited kableExtra::kbl() default settings look publication-ready. includes changing column names fixing alignment.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/clean_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pass a panelsummary::panelsummary_raw dataframe into kableExtra::kbl() with typical defaults — clean_raw","text":"","code":"clean_raw(   data.frame,   alignment = NULL,   colnames = NULL,   format = NULL,   caption = NULL )"},{"path":"https://michaeltopper1.github.io/panelsummary/reference/clean_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pass a panelsummary::panelsummary_raw dataframe into kableExtra::kbl() with typical defaults — clean_raw","text":"data.frame data.frame (tibble) panelsummary::panelsummary_raw() manipulated. alignment character string. default, set left adjusting first column, centering rest columns. example, model three columns adjustment \"lcc\". colnames optional vector strings. vector strings length number columns table. * `NULL` (default): colnames defaulted whitespace, followed (1), (2), ....etc. format character string. Possible values latex, html, pipe (Pandoc's pipe tables), simple (Pandoc's simple tables), rst. value argument automatically determined function called within knitr document. format value can also set global option knitr.table.format. format function, must return character string. caption string. table caption.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/clean_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pass a panelsummary::panelsummary_raw dataframe into kableExtra::kbl() with typical defaults — clean_raw","text":"raw data frame ready manipulation.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/clean_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pass a panelsummary::panelsummary_raw dataframe into kableExtra::kbl() with typical defaults — clean_raw","text":"","code":"## Cleaning a panelsummary_raw dataframe with clean_raw  ols_1 <- mtcars |> fixest::feols(mpg ~  cyl | gear + carb, cluster = ~hp, nthreads = 2)  panelsummary_raw(ols_1, ols_1) |> clean_raw() #> <table> #>  <thead> #>   <tr> #>    <th style=\"text-align:left;\">   <\/th> #>    <th style=\"text-align:center;\"> (1) <\/th> #>   <\/tr> #>  <\/thead> #> <tbody> #>   <tr> #>    <td style=\"text-align:left;\"> cyl <\/td> #>    <td style=\"text-align:center;\"> -0.907 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\">  <\/td> #>    <td style=\"text-align:center;\"> (0.789) <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Num.Obs. <\/td> #>    <td style=\"text-align:center;\"> 32 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> R2 <\/td> #>    <td style=\"text-align:center;\"> 0.818 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> R2 Adj. <\/td> #>    <td style=\"text-align:center;\"> 0.755 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> R2 Within <\/td> #>    <td style=\"text-align:center;\"> 0.058 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> R2 Within Adj. <\/td> #>    <td style=\"text-align:center;\"> 0.017 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> AIC <\/td> #>    <td style=\"text-align:center;\"> 168.3 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> BIC <\/td> #>    <td style=\"text-align:center;\"> 181.4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> RMSE <\/td> #>    <td style=\"text-align:center;\"> 2.53 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Std.Errors <\/td> #>    <td style=\"text-align:center;\"> by: hp <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> FE: gear <\/td> #>    <td style=\"text-align:center;\"> X <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> FE: carb <\/td> #>    <td style=\"text-align:center;\"> X <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> cyl <\/td> #>    <td style=\"text-align:center;\"> -0.907 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\">  <\/td> #>    <td style=\"text-align:center;\"> (0.789) <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Num.Obs. <\/td> #>    <td style=\"text-align:center;\"> 32 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> R2 <\/td> #>    <td style=\"text-align:center;\"> 0.818 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> R2 Adj. <\/td> #>    <td style=\"text-align:center;\"> 0.755 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> R2 Within <\/td> #>    <td style=\"text-align:center;\"> 0.058 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> R2 Within Adj. <\/td> #>    <td style=\"text-align:center;\"> 0.017 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> AIC <\/td> #>    <td style=\"text-align:center;\"> 168.3 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> BIC <\/td> #>    <td style=\"text-align:center;\"> 181.4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> RMSE <\/td> #>    <td style=\"text-align:center;\"> 2.53 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Std.Errors <\/td> #>    <td style=\"text-align:center;\"> by: hp <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> FE: gear <\/td> #>    <td style=\"text-align:center;\"> X <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> FE: carb <\/td> #>    <td style=\"text-align:center;\"> X <\/td> #>   <\/tr> #> <\/tbody> #> <\/table>"},{"path":"https://michaeltopper1.github.io/panelsummary/reference/connect_means.html","id":null,"dir":"Reference","previous_headings":"","what":"Merges the means to the modelsummary output dataframe — connect_means","title":"Merges the means to the modelsummary output dataframe — connect_means","text":"`connect_means` connects means modelsummary dataframe.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/connect_means.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merges the means to the modelsummary output dataframe — connect_means","text":"","code":"connect_means(panel_df, means)"},{"path":"https://michaeltopper1.github.io/panelsummary/reference/connect_means.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merges the means to the modelsummary output dataframe — connect_means","text":"panel_df modelsummary dataframe supplied modelsummary::modelsummary(x, output = \"data.frame\") means list named vectors means correspond model.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/connect_means.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merges the means to the modelsummary output dataframe — connect_means","text":"data.frame attached means.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/create_alignment.html","id":null,"dir":"Reference","previous_headings":"","what":"creates alignment of left, center, center, ... — create_alignment","title":"creates alignment of left, center, center, ... — create_alignment","text":"creates alignment left, center, center, ...","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/create_alignment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"creates alignment of left, center, center, ... — create_alignment","text":"","code":"create_alignment(number_models)"},{"path":"https://michaeltopper1.github.io/panelsummary/reference/create_column_names.html","id":null,"dir":"Reference","previous_headings":"","what":"creates the column names of (1), (2), ... — create_column_names","title":"creates the column names of (1), (2), ... — create_column_names","text":"creates column names (1), (2), ...","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/create_column_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"creates the column names of (1), (2), ... — create_column_names","text":"","code":"create_column_names(number_models)"},{"path":"https://michaeltopper1.github.io/panelsummary/reference/create_panels_null.html","id":null,"dir":"Reference","previous_headings":"","what":"creates panel labels when the argument is null — create_panels_null","title":"creates panel labels when the argument is null — create_panels_null","text":"creates panel labels argument null","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/create_panels_null.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"creates panel labels when the argument is null — create_panels_null","text":"","code":"create_panels_null(num_panels)"},{"path":"https://michaeltopper1.github.io/panelsummary/reference/create_panels_null.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"creates panel labels when the argument is null — create_panels_null","text":"num_panels number panels regression table.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/create_panels_null.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"creates panel labels when the argument is null — create_panels_null","text":"default panel labels named \"Panel :\", \"Panel B:\", ...\"Panel E:\"","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/econ_stars.html","id":null,"dir":"Reference","previous_headings":"","what":"creates economics convention significance stars — econ_stars","title":"creates economics convention significance stars — econ_stars","text":"creates economics convention significance stars","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/econ_stars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"creates economics convention significance stars — econ_stars","text":"","code":"econ_stars()"},{"path":"https://michaeltopper1.github.io/panelsummary/reference/get_lpanel_fe.html","id":null,"dir":"Reference","previous_headings":"","what":"gets the number of fixed effects in the last panel for collapse_fe purposes — get_lpanel_fe","title":"gets the number of fixed effects in the last panel for collapse_fe purposes — get_lpanel_fe","text":"gets number fixed effects last panel collapse_fe purposes","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/get_lpanel_fe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gets the number of fixed effects in the last panel for collapse_fe purposes — get_lpanel_fe","text":"","code":"get_lpanel_fe(df, panels)"},{"path":"https://michaeltopper1.github.io/panelsummary/reference/get_means_fixest.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates the mean of the dependent variable for each model — get_means_fixest","title":"Generates the mean of the dependent variable for each model — get_means_fixest","text":"`get_means_fixest` generates mean dependent variable model supplied panelsummary::panelsummary. function accepts fixest objects uses built-fixest fitstat compute means.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/get_means_fixest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates the mean of the dependent variable for each model — get_means_fixest","text":"","code":"get_means_fixest(models, fmt)"},{"path":"https://michaeltopper1.github.io/panelsummary/reference/get_means_fixest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates the mean of the dependent variable for each model — get_means_fixest","text":"models list lists. list contain fixest objects. fmt integer. denote many decimal places round table.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/get_means_fixest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates the mean of the dependent variable for each model — get_means_fixest","text":"list named vectors denoting means model.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/get_panel_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"gets the row numbers for break points in the panels — get_panel_indices","title":"gets the row numbers for break points in the panels — get_panel_indices","text":"gets row numbers break points panels","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/get_panel_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gets the row numbers for break points in the panels — get_panel_indices","text":"","code":"get_panel_indices(panel)"},{"path":"https://michaeltopper1.github.io/panelsummary/reference/get_panel_indices_collapse.html","id":null,"dir":"Reference","previous_headings":"","what":"gets the indices of each of the breaks in the panel — get_panel_indices_collapse","title":"gets the indices of each of the breaks in the panel — get_panel_indices_collapse","text":"gets indices breaks panel","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/get_panel_indices_collapse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gets the indices of each of the breaks in the panel — get_panel_indices_collapse","text":"","code":"get_panel_indices_collapse(panel_df, num_panels)"},{"path":"https://michaeltopper1.github.io/panelsummary/reference/models_supported.html","id":null,"dir":"Reference","previous_headings":"","what":"all models supported by panelsummary — models_supported","title":"all models supported by panelsummary — models_supported","text":"models supported panelsummary","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/models_supported.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"all models supported by panelsummary — models_supported","text":"","code":"models_supported()"},{"path":"https://michaeltopper1.github.io/panelsummary/reference/models_supported.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"all models supported by panelsummary — models_supported","text":"list modeltypes supported panelsummary","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/models_supported.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"all models supported by panelsummary — models_supported","text":"","code":"models_supported() #> [1] \"fixest\" \"lm\""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/panelsummary-package.html","id":null,"dir":"Reference","previous_headings":"","what":"panelsummary: Create Publication-Ready Regression Tables with Panels — panelsummary-package","title":"panelsummary: Create Publication-Ready Regression Tables with Panels — panelsummary-package","text":"Create automated regression table well-suited models estimated multiple dependent variables. 'panelsummary' extends 'modelsummary' (Arel-Bundock, V. (2022) doi:10.18637/jss.v103.i01 ) allowing regression tables split multiple sections simple function call. Utilize familiar arguments fmt, estimate, statistic, vcov, conf_level, stars, coef_map, coef_omit, coef_rename, gof_map, gof_omit 'modelsummary' clean table, additionally, add row mean dependent variable without external manipulation.","code":""},{"path":[]},{"path":"https://michaeltopper1.github.io/panelsummary/reference/panelsummary-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"panelsummary: Create Publication-Ready Regression Tables with Panels — panelsummary-package","text":"Maintainer: Michael Topper miketopper123@gmail.com contributors: Vincent Arel-Bundock (documentation inherited 'modelsummary') [copyright holder]","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/panelsummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a regression table with multiple panels — panelsummary","title":"Create a regression table with multiple panels — panelsummary","text":"`panelsummary` Creates beautiful customizable regression table panels. function best used summarize multiple dependent variables passed regression models. function returns kableExtra object can edited using kableExtra's suite functions.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/panelsummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a regression table with multiple panels — panelsummary","text":"","code":"panelsummary(   ...,   panel_labels = NULL,   mean_dependent = FALSE,   colnames = NULL,   caption = NULL,   format = NULL,   collapse_fe = FALSE,   bold = FALSE,   italic = FALSE,   hline_after = FALSE,   hline_before_fe = TRUE,   fmt = 3,   estimate = \"estimate\",   statistic = \"std.error\",   vcov = NULL,   conf_level = 0.95,   stars = FALSE,   coef_map = NULL,   coef_omit = NULL,   coef_rename = NULL,   gof_map = NULL,   gof_omit = NULL )"},{"path":"https://michaeltopper1.github.io/panelsummary/reference/panelsummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a regression table with multiple panels — panelsummary","text":"... regression model models (see panelsummary::models_supported classes supported). * regression model can list models singular object. * list passed , one column list created. argument correspond panel. * one object passed , panels output similar evaluating modelsummary::modelsummary() followed kableExtra::kbl() panel_labels character vector. label panel table. * `NULL` (default): panels labeled \"Panel :\", \"Panel B:\",...etc. mean_dependent boolean. use fixest objects . * `FALSE` (default): mean dependent variable shown resulting table. * `TRUE`: mean dependent variable shown resulting table. colnames optional vector strings. vector strings length number columns table. * `NULL` (default): colnames defaulted whitespace, followed (1), (2), ....etc. caption string. table caption. format character string. Possible values latex, html, pipe (Pandoc's pipe tables), simple (Pandoc's simple tables), rst. value argument automatically determined function called within knitr document. format value can also set global option knitr.table.format. format function, must return character string. collapse_fe boolean. use fixest objects . Determines whether fixed effects included bottom table. suited panel models fixed effects. * `FALSE` (default): fixed effects shown panel. * `TRUE`: fixed effects shown bottom final panel, separated horizontal line (see hline_before_fe) bold boolean. Determines whether panel names bold font. * `FALSE` (default): panel names bold. * `TRUE`: panel names bolded italic boolean. Determines whether panel names italics. * `FALSE` (default): panel names italics. * `TRUE`: panel names italics. hline_after boolean. Adds horizontal line panel labels. * `FALSE` (default): horizonal line panel labels. * `TRUE`: horizontal line appear panel labels. hline_before_fe boolean. used collapse_fe = TRUE, hence fixest objects . Adds horizontal line fixed effects portion table. fmt format numeric values: integer, user-supplied function, modelsummary function. Integer: Number decimal digits User-supplied functions: function accepts numeric vector returns character vector length. modelsummary functions: fmt = fmt_significant(2): Two significant digits (term-level) fmt = fmt_decimal(digits = 2, pdigits = 3): Decimal digits estimate p values fmt = fmt_sprintf(\"%.3f\"): See ?sprintf fmt = fmt_term(\"(Intercept)\" = 1, \"X\" = 2): Format terms differently fmt = fmt_statistic(\"estimate\" = 1, \"r.sqared\" = 6): Format statistics differently. fmt = fmt_identity(): unformatted raw values string: Note LaTeX output: ensure proper typography, numeric entries enclosed \\num{} command, requires siunitx package loaded LaTeX preamble. behavior can altered global options. See 'Details' section. estimate single string character vector length equal number models. Valid entries include column name data.frame produced get_estimates(model), strings curly braces compatible glue package format. Examples: \"estimate\" \"{estimate} ({std.error}){stars}\" \"{estimate} [{conf.low}, {conf.high}]\" statistic vector strings glue strings select uncertainty statistics report vertically estimate. NULL omits uncertainty statistics. \"conf.int\", \"std.error\", \"statistic\", \"p.value\", \"conf.low\", \"conf.high\", . column name produced get_estimates(model) glue package strings braces, without R functions, : \"{p.value} [{conf.low}, {conf.high}]\" \"Std.Error: {std.error}\" `\"exp(estimate) * std.error\" Numbers automatically rounded converted strings. apply functions numeric values, last glue example, users must set fmt=NULL. Parentheses added automatically unless string includes glue curly braces {}. statistics supported models. See column names get_estimates(model), visit website learn add custom statistics. vcov robust standard errors manual statistics. vcov argument accepts six types input (see 'Details' 'Examples' sections ): NULL returns default uncertainty estimates model object string, vector, (named) list strings. \"iid\", \"classical\", \"constant\" aliases NULL, returns model's default uncertainty estimates. strings \"HC\", \"HC0\", \"HC1\" (alias: \"stata\"), \"HC2\", \"HC3\" (alias: \"robust\"), \"HC4\", \"HC4m\", \"HC5\", \"HAC\", \"NeweyWest\", \"Andrews\", \"panel-corrected\", \"outer-product\", \"weave\" use variance-covariance matrices computed using functions sandwich package, equivalent method. behavior functions can (sometimes must) altered passing arguments sandwich directly modelsummary ellipsis (...), safer define custom functions described next bullet. function (named) list functions return variance-covariance matrices row column names equal names coefficient estimates (e.g., stats::vcov, sandwich::vcovHC, function(x) vcovPC(x, cluster=\"country\")). formula (named) list formulas cluster variable(s) right-hand side (e.g., ~clusterid). named list length(models) variance-covariance matrices row column names equal names coefficient estimates. named list length(models) vectors names equal names coefficient estimates. See 'Examples' section . Warning: since list vectors can include arbitrary strings numbers, modelsummary automatically calculate p values. stars argument may thus use incorrect significance thresholds vcov list vectors. conf_level numeric value 0 1. confidence level use confidence intervals. Setting argument NULL extract confidence intervals, can faster models. stars indicate statistical significance FALSE (default): significance stars. TRUE: +=.1, *=.05, **=.01, ***=0.001 Named numeric vector custom stars c('*' = .1, '+' = .05) Note: legend inserted bottom table estimate statistic arguments use \"glue strings\" {stars}. coef_map character vector. Subset, rename, reorder coefficients. Coefficients omitted vector omitted table. order vector determines order table. coef_map can named unnamed character vector. coef_map named vector, values define labels must appear table, names identify original term names stored model object: c(\"hp:mpg\"=\"HPxM/G\"). See Examples section . coef_omit integer vector regular expression identify coefficients omit (keep) table. Positive integers determine coefficients omit. Negative integers determine coefficients keep. regular expression can used omit coefficients, perl-compatible \"negative lookaheads\" can used specify coefficients keep table. Examples: c(2, 3, 5): omits second, third, fifth coefficients. c(-2, -3, -5): negative values keep second, third, fifth coefficients. \"ei\": omit coefficients matching \"ei\" substring. \"^Volume$\": omit \"Volume\" coefficient. \"ei|rc\": omit coefficients matching either \"ei\" \"rc\" substrings. \"^(?!Vol)\": keep coefficients starting \"Vol\" (inverse match using negative lookahead). \"^(?!.*ei)\": keep coefficients matching \"ei\" substring. \"^(?!.*ei|.*pt)\": keep coefficients matching either \"ei\" \"pt\" substrings. See Examples section complete code. coef_rename logical, named unnamed character vector, function Logical: TRUE renames variables based \"label\" attribute column. See Example section . Unnamed character vector length equal number coefficients final table, coef_omit applied. Named character vector: Values refer variable names appear table. Names refer original term names stored model object. Ex: c(\"hp:mpg\"=\"hp X mpg\") Function: Accepts character vector model's term names returns named vector like one described . modelsummary package supplies coef_rename() function can common cleaning tasks: modelsummary(model, coef_rename = coef_rename) gof_map rename, reorder, omit goodness--fit statistics model information. argument accepts 4 types values: NULL (default): modelsummary::gof_map dictionary used formatting, unknown statistic included. character vector: \"\", \"none\", vector statistics c(\"rmse\", \"nobs\", \"r.squared\"). Elements correspond colnames data.frame produced get_gof(model). modelsummary::gof_map default dictionary used format rename statistics. NA: excludes statistics bottom part table. data.frame 3 columns named \"raw\", \"clean\", \"fmt\". Unknown statistics omitted. See 'Examples' section . list lists, includes 3 elements named \"raw\", \"clean\", \"fmt\". Unknown statistics omitted. See 'Examples section '. gof_omit string regular expression (perl-compatible) used determine statistics omit bottom section table. \"negative lookahead\" can used specify statistics keep table. Examples: \"IC\": omit statistics matching \"IC\" substring. \"BIC|AIC\": omit statistics matching \"AIC\" \"BIC\" substrings. \"^(?!.*IC)\": keep statistics matching \"IC\" substring.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/panelsummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a regression table with multiple panels — panelsummary","text":"kableExtra object instantly customizable kableExtra's suite functions.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/panelsummary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a regression table with multiple panels — panelsummary","text":"","code":"# Panelsummary with lm -------------------------  reg_1 <- lm(mpg ~ hp + cyl, data = mtcars) reg_2 <- lm(disp ~ hp + cyl, data = mtcars)  panelsummary(reg_1, reg_2, panel_labels = c(\"Panel A: MPG\", \"Panel B: Displacement\")) #> <table> #>  <thead> #>   <tr> #>    <th style=\"text-align:left;\">   <\/th> #>    <th style=\"text-align:center;\"> (1) <\/th> #>   <\/tr> #>  <\/thead> #> <tbody> #>   <tr grouplength=\"13\"><td colspan=\"2\" style=\"border-bottom: 1px solid;\">Panel A: MPG<\/td><\/tr> #> <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> (Intercept) <\/td> #>    <td style=\"text-align:center;\"> 36.908 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\">  <\/td> #>    <td style=\"text-align:center;\"> (2.191) <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> hp <\/td> #>    <td style=\"text-align:center;\"> -0.019 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\">  <\/td> #>    <td style=\"text-align:center;\"> (0.015) <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> cyl <\/td> #>    <td style=\"text-align:center;\"> -2.265 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\">  <\/td> #>    <td style=\"text-align:center;\"> (0.576) <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> Num.Obs. <\/td> #>    <td style=\"text-align:center;\"> 32 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> R2 <\/td> #>    <td style=\"text-align:center;\"> 0.741 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> R2 Adj. <\/td> #>    <td style=\"text-align:center;\"> 0.723 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> AIC <\/td> #>    <td style=\"text-align:center;\"> 169.6 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> BIC <\/td> #>    <td style=\"text-align:center;\"> 175.4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> Log.Lik. <\/td> #>    <td style=\"text-align:center;\"> -80.781 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> RMSE <\/td> #>    <td style=\"text-align:center;\"> 3.02 <\/td> #>   <\/tr> #>   <tr grouplength=\"13\"><td colspan=\"2\" style=\"border-bottom: 1px solid;\">Panel B: Displacement<\/td><\/tr> #> <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> (Intercept) <\/td> #>    <td style=\"text-align:center;\"> -144.569 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\">  <\/td> #>    <td style=\"text-align:center;\"> (37.652) <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> hp <\/td> #>    <td style=\"text-align:center;\"> 0.236 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\">  <\/td> #>    <td style=\"text-align:center;\"> (0.258) <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> cyl <\/td> #>    <td style=\"text-align:center;\"> 55.063 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\">  <\/td> #>    <td style=\"text-align:center;\"> (9.898) <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> Num.Obs. <\/td> #>    <td style=\"text-align:center;\"> 32 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> R2 <\/td> #>    <td style=\"text-align:center;\"> 0.819 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> R2 Adj. <\/td> #>    <td style=\"text-align:center;\"> 0.806 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> AIC <\/td> #>    <td style=\"text-align:center;\"> 351.6 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> BIC <\/td> #>    <td style=\"text-align:center;\"> 357.4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> Log.Lik. <\/td> #>    <td style=\"text-align:center;\"> -171.793 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> RMSE <\/td> #>    <td style=\"text-align:center;\"> 51.91 <\/td> #>   <\/tr> #> <\/tbody> #> <\/table>   # Panelsummary with fixest -------------------------  ols_1 <- mtcars |> fixest::feols(mpg ~  cyl | gear + carb, cluster = ~hp, nthreads = 2)  panelsummary(ols_1, ols_1, mean_dependent = TRUE,             panel_labels = c(\"Panel A:MPG\", \"Panel B: DISP\"),             caption = \"The effect of cyl on MPG and DISP\",             italic = TRUE, stars = TRUE) #> <table> #> <caption>The effect of cyl on MPG and DISP<\/caption> #>  <thead> #>   <tr> #>    <th style=\"text-align:left;\">   <\/th> #>    <th style=\"text-align:center;\"> (1) <\/th> #>   <\/tr> #>  <\/thead> #> <tbody> #>   <tr grouplength=\"14\"><td colspan=\"2\" style=\"border-bottom: 1px solid;\"><em>Panel A:MPG<\/em><\/td><\/tr> #> <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> cyl <\/td> #>    <td style=\"text-align:center;\"> -0.907 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\">  <\/td> #>    <td style=\"text-align:center;\"> (0.789) <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> Mean of Dependent Variable <\/td> #>    <td style=\"text-align:center;\"> 20.091 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> Num.Obs. <\/td> #>    <td style=\"text-align:center;\"> 32 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> R2 <\/td> #>    <td style=\"text-align:center;\"> 0.818 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> R2 Adj. <\/td> #>    <td style=\"text-align:center;\"> 0.755 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> R2 Within <\/td> #>    <td style=\"text-align:center;\"> 0.058 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> R2 Within Adj. <\/td> #>    <td style=\"text-align:center;\"> 0.017 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> AIC <\/td> #>    <td style=\"text-align:center;\"> 168.3 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> BIC <\/td> #>    <td style=\"text-align:center;\"> 181.4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> RMSE <\/td> #>    <td style=\"text-align:center;\"> 2.53 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> Std.Errors <\/td> #>    <td style=\"text-align:center;\"> by: hp <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> FE: gear <\/td> #>    <td style=\"text-align:center;\"> X <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> FE: carb <\/td> #>    <td style=\"text-align:center;\"> X <\/td> #>   <\/tr> #>   <tr grouplength=\"14\"><td colspan=\"2\" style=\"border-bottom: 1px solid;\"><em>Panel B: DISP<\/em><\/td><\/tr> #> <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> cyl <\/td> #>    <td style=\"text-align:center;\"> -0.907 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\">  <\/td> #>    <td style=\"text-align:center;\"> (0.789) <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> Mean of Dependent Variable <\/td> #>    <td style=\"text-align:center;\"> 20.091 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> Num.Obs. <\/td> #>    <td style=\"text-align:center;\"> 32 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> R2 <\/td> #>    <td style=\"text-align:center;\"> 0.818 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> R2 Adj. <\/td> #>    <td style=\"text-align:center;\"> 0.755 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> R2 Within <\/td> #>    <td style=\"text-align:center;\"> 0.058 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> R2 Within Adj. <\/td> #>    <td style=\"text-align:center;\"> 0.017 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> AIC <\/td> #>    <td style=\"text-align:center;\"> 168.3 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> BIC <\/td> #>    <td style=\"text-align:center;\"> 181.4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> RMSE <\/td> #>    <td style=\"text-align:center;\"> 2.53 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> Std.Errors <\/td> #>    <td style=\"text-align:center;\"> by: hp <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> FE: gear <\/td> #>    <td style=\"text-align:center;\"> X <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> FE: carb <\/td> #>    <td style=\"text-align:center;\"> X <\/td> #>   <\/tr> #> <\/tbody> #> <\/table>   ## Collapsing fixed effects (fixest-only)----------------  panelsummary(ols_1, ols_1, mean_dependent = TRUE,             collapse_fe = TRUE, panel_labels = c(\"Panel A: MPG\", \"Panel B: DISP\"),             caption = \"The effect of cyl on MPG and DISP\",             italic = TRUE, stars = TRUE) #> Warning: panelsummary does not check if the fixed effects in each panel match. It always assumes they do! #> <table> #> <caption>The effect of cyl on MPG and DISP<\/caption> #>  <thead> #>   <tr> #>    <th style=\"text-align:left;\">   <\/th> #>    <th style=\"text-align:center;\"> (1) <\/th> #>   <\/tr> #>  <\/thead> #> <tbody> #>   <tr grouplength=\"12\"><td colspan=\"2\" style=\"border-bottom: 1px solid;\"><em>Panel A: MPG<\/em><\/td><\/tr> #> <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> cyl <\/td> #>    <td style=\"text-align:center;\"> -0.907 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\">  <\/td> #>    <td style=\"text-align:center;\"> (0.789) <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> Mean of Dependent Variable <\/td> #>    <td style=\"text-align:center;\"> 20.091 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> Num.Obs. <\/td> #>    <td style=\"text-align:center;\"> 32 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> R2 <\/td> #>    <td style=\"text-align:center;\"> 0.818 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> R2 Adj. <\/td> #>    <td style=\"text-align:center;\"> 0.755 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> R2 Within <\/td> #>    <td style=\"text-align:center;\"> 0.058 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> R2 Within Adj. <\/td> #>    <td style=\"text-align:center;\"> 0.017 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> AIC <\/td> #>    <td style=\"text-align:center;\"> 168.3 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> BIC <\/td> #>    <td style=\"text-align:center;\"> 181.4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> RMSE <\/td> #>    <td style=\"text-align:center;\"> 2.53 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> Std.Errors <\/td> #>    <td style=\"text-align:center;\"> by: hp <\/td> #>   <\/tr> #>   <tr grouplength=\"12\"><td colspan=\"2\" style=\"border-bottom: 1px solid;\"><em>Panel B: DISP<\/em><\/td><\/tr> #> <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> cyl <\/td> #>    <td style=\"text-align:center;\"> -0.907 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\">  <\/td> #>    <td style=\"text-align:center;\"> (0.789) <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> Mean of Dependent Variable <\/td> #>    <td style=\"text-align:center;\"> 20.091 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> Num.Obs. <\/td> #>    <td style=\"text-align:center;\"> 32 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> R2 <\/td> #>    <td style=\"text-align:center;\"> 0.818 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> R2 Adj. <\/td> #>    <td style=\"text-align:center;\"> 0.755 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> R2 Within <\/td> #>    <td style=\"text-align:center;\"> 0.058 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> R2 Within Adj. <\/td> #>    <td style=\"text-align:center;\"> 0.017 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> AIC <\/td> #>    <td style=\"text-align:center;\"> 168.3 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> BIC <\/td> #>    <td style=\"text-align:center;\"> 181.4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> RMSE <\/td> #>    <td style=\"text-align:center;\"> 2.53 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> Std.Errors <\/td> #>    <td style=\"text-align:center;\"> by: hp <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> FE: gear <\/td> #>    <td style=\"text-align:center;\"> X <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> FE: carb <\/td> #>    <td style=\"text-align:center;\"> X <\/td> #>   <\/tr> #> <\/tbody> #> <\/table>  ## Including multiple models------------------   panelsummary(list(ols_1, ols_1, ols_1), ols_1,              panel_labels = c(\"Panel A: MPG\", \"Panel B: DISP\"),               caption = \"Multiple models\",               stars = TRUE) #> <table> #> <caption>Multiple models<\/caption> #>  <thead> #>   <tr> #>    <th style=\"text-align:left;\">   <\/th> #>    <th style=\"text-align:center;\"> (1) <\/th> #>    <th style=\"text-align:center;\"> (2) <\/th> #>    <th style=\"text-align:center;\"> (3) <\/th> #>   <\/tr> #>  <\/thead> #> <tbody> #>   <tr grouplength=\"13\"><td colspan=\"4\" style=\"border-bottom: 1px solid;\">Panel A: MPG<\/td><\/tr> #> <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> cyl <\/td> #>    <td style=\"text-align:center;\"> -0.907 <\/td> #>    <td style=\"text-align:center;\"> -0.907 <\/td> #>    <td style=\"text-align:center;\"> -0.907 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\">  <\/td> #>    <td style=\"text-align:center;\"> (0.789) <\/td> #>    <td style=\"text-align:center;\"> (0.789) <\/td> #>    <td style=\"text-align:center;\"> (0.789) <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> Num.Obs. <\/td> #>    <td style=\"text-align:center;\"> 32 <\/td> #>    <td style=\"text-align:center;\"> 32 <\/td> #>    <td style=\"text-align:center;\"> 32 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> R2 <\/td> #>    <td style=\"text-align:center;\"> 0.818 <\/td> #>    <td style=\"text-align:center;\"> 0.818 <\/td> #>    <td style=\"text-align:center;\"> 0.818 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> R2 Adj. <\/td> #>    <td style=\"text-align:center;\"> 0.755 <\/td> #>    <td style=\"text-align:center;\"> 0.755 <\/td> #>    <td style=\"text-align:center;\"> 0.755 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> R2 Within <\/td> #>    <td style=\"text-align:center;\"> 0.058 <\/td> #>    <td style=\"text-align:center;\"> 0.058 <\/td> #>    <td style=\"text-align:center;\"> 0.058 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> R2 Within Adj. <\/td> #>    <td style=\"text-align:center;\"> 0.017 <\/td> #>    <td style=\"text-align:center;\"> 0.017 <\/td> #>    <td style=\"text-align:center;\"> 0.017 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> AIC <\/td> #>    <td style=\"text-align:center;\"> 168.3 <\/td> #>    <td style=\"text-align:center;\"> 168.3 <\/td> #>    <td style=\"text-align:center;\"> 168.3 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> BIC <\/td> #>    <td style=\"text-align:center;\"> 181.4 <\/td> #>    <td style=\"text-align:center;\"> 181.4 <\/td> #>    <td style=\"text-align:center;\"> 181.4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> RMSE <\/td> #>    <td style=\"text-align:center;\"> 2.53 <\/td> #>    <td style=\"text-align:center;\"> 2.53 <\/td> #>    <td style=\"text-align:center;\"> 2.53 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> Std.Errors <\/td> #>    <td style=\"text-align:center;\"> by: hp <\/td> #>    <td style=\"text-align:center;\"> by: hp <\/td> #>    <td style=\"text-align:center;\"> by: hp <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> FE: gear <\/td> #>    <td style=\"text-align:center;\"> X <\/td> #>    <td style=\"text-align:center;\"> X <\/td> #>    <td style=\"text-align:center;\"> X <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> FE: carb <\/td> #>    <td style=\"text-align:center;\"> X <\/td> #>    <td style=\"text-align:center;\"> X <\/td> #>    <td style=\"text-align:center;\"> X <\/td> #>   <\/tr> #>   <tr grouplength=\"13\"><td colspan=\"4\" style=\"border-bottom: 1px solid;\">Panel B: DISP<\/td><\/tr> #> <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> cyl <\/td> #>    <td style=\"text-align:center;\"> -0.907 <\/td> #>    <td style=\"text-align:center;\">  <\/td> #>    <td style=\"text-align:center;\">  <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\">  <\/td> #>    <td style=\"text-align:center;\"> (0.789) <\/td> #>    <td style=\"text-align:center;\">  <\/td> #>    <td style=\"text-align:center;\">  <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> Num.Obs. <\/td> #>    <td style=\"text-align:center;\"> 32 <\/td> #>    <td style=\"text-align:center;\">  <\/td> #>    <td style=\"text-align:center;\">  <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> R2 <\/td> #>    <td style=\"text-align:center;\"> 0.818 <\/td> #>    <td style=\"text-align:center;\">  <\/td> #>    <td style=\"text-align:center;\">  <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> R2 Adj. <\/td> #>    <td style=\"text-align:center;\"> 0.755 <\/td> #>    <td style=\"text-align:center;\">  <\/td> #>    <td style=\"text-align:center;\">  <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> R2 Within <\/td> #>    <td style=\"text-align:center;\"> 0.058 <\/td> #>    <td style=\"text-align:center;\">  <\/td> #>    <td style=\"text-align:center;\">  <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> R2 Within Adj. <\/td> #>    <td style=\"text-align:center;\"> 0.017 <\/td> #>    <td style=\"text-align:center;\">  <\/td> #>    <td style=\"text-align:center;\">  <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> AIC <\/td> #>    <td style=\"text-align:center;\"> 168.3 <\/td> #>    <td style=\"text-align:center;\">  <\/td> #>    <td style=\"text-align:center;\">  <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> BIC <\/td> #>    <td style=\"text-align:center;\"> 181.4 <\/td> #>    <td style=\"text-align:center;\">  <\/td> #>    <td style=\"text-align:center;\">  <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> RMSE <\/td> #>    <td style=\"text-align:center;\"> 2.53 <\/td> #>    <td style=\"text-align:center;\">  <\/td> #>    <td style=\"text-align:center;\">  <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> Std.Errors <\/td> #>    <td style=\"text-align:center;\"> by: hp <\/td> #>    <td style=\"text-align:center;\">  <\/td> #>    <td style=\"text-align:center;\">  <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> FE: gear <\/td> #>    <td style=\"text-align:center;\"> X <\/td> #>    <td style=\"text-align:center;\">  <\/td> #>    <td style=\"text-align:center;\">  <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;padding-left: 2em;\" indentlevel=\"1\"> FE: carb <\/td> #>    <td style=\"text-align:center;\"> X <\/td> #>    <td style=\"text-align:center;\">  <\/td> #>    <td style=\"text-align:center;\">  <\/td> #>   <\/tr> #> <\/tbody> #> <\/table>"},{"path":"https://michaeltopper1.github.io/panelsummary/reference/panelsummary_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a regression data.frame to manually edit further — panelsummary_raw","title":"Create a regression data.frame to manually edit further — panelsummary_raw","text":"`panelsummary_raw` Creates data.frame editing. data.frame can directly passed kableExtra::kbl(), alternatively, passed panelsummary::clean_raw() get typical defaults kableExtra::kbl().","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/panelsummary_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a regression data.frame to manually edit further — panelsummary_raw","text":"","code":"panelsummary_raw(   ...,   mean_dependent = FALSE,   colnames = NULL,   caption = NULL,   format = NULL,   fmt = 3,   estimate = \"estimate\",   statistic = \"std.error\",   vcov = NULL,   conf_level = 0.95,   stars = FALSE,   coef_map = NULL,   coef_omit = NULL,   coef_rename = NULL,   gof_map = NULL,   gof_omit = NULL )"},{"path":"https://michaeltopper1.github.io/panelsummary/reference/panelsummary_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a regression data.frame to manually edit further — panelsummary_raw","text":"... arguments passed three functions. See documentation functions lists available arguments. parameters::model_parameters extracts parameter estimates. Available arguments depend model type, include: standardize, centrality, dispersion, test, ci_method, prior, diagnostic, rope_range, power, cluster, etc. performance::model_performance extracts goodness--fit statistics. Available arguments depend model type, include: metrics, estimator, etc. kableExtra::kbl gt::gt draw tables, depending value output argument. mean_dependent boolean. use fixest objects . * `FALSE` (default): mean dependent variable shown resulting table. * `TRUE`: mean dependent variable shown resulting table. colnames optional vector strings. vector strings length number columns table. * `NULL` (default): colnames defaulted whitespace, followed (1), (2), ....etc. caption string. table caption. format character string. Possible values latex, html, pipe (Pandoc's pipe tables), simple (Pandoc's simple tables), rst. value argument automatically determined function called within knitr document. format value can also set global option knitr.table.format. format function, must return character string. fmt format numeric values: integer, user-supplied function, modelsummary function. Integer: Number decimal digits User-supplied functions: function accepts numeric vector returns character vector length. modelsummary functions: fmt = fmt_significant(2): Two significant digits (term-level) fmt = fmt_decimal(digits = 2, pdigits = 3): Decimal digits estimate p values fmt = fmt_sprintf(\"%.3f\"): See ?sprintf fmt = fmt_term(\"(Intercept)\" = 1, \"X\" = 2): Format terms differently fmt = fmt_statistic(\"estimate\" = 1, \"r.sqared\" = 6): Format statistics differently. fmt = fmt_identity(): unformatted raw values string: Note LaTeX output: ensure proper typography, numeric entries enclosed \\num{} command, requires siunitx package loaded LaTeX preamble. behavior can altered global options. See 'Details' section. estimate single string character vector length equal number models. Valid entries include column name data.frame produced get_estimates(model), strings curly braces compatible glue package format. Examples: \"estimate\" \"{estimate} ({std.error}){stars}\" \"{estimate} [{conf.low}, {conf.high}]\" statistic vector strings glue strings select uncertainty statistics report vertically estimate. NULL omits uncertainty statistics. \"conf.int\", \"std.error\", \"statistic\", \"p.value\", \"conf.low\", \"conf.high\", . column name produced get_estimates(model) glue package strings braces, without R functions, : \"{p.value} [{conf.low}, {conf.high}]\" \"Std.Error: {std.error}\" `\"exp(estimate) * std.error\" Numbers automatically rounded converted strings. apply functions numeric values, last glue example, users must set fmt=NULL. Parentheses added automatically unless string includes glue curly braces {}. statistics supported models. See column names get_estimates(model), visit website learn add custom statistics. vcov robust standard errors manual statistics. vcov argument accepts six types input (see 'Details' 'Examples' sections ): NULL returns default uncertainty estimates model object string, vector, (named) list strings. \"iid\", \"classical\", \"constant\" aliases NULL, returns model's default uncertainty estimates. strings \"HC\", \"HC0\", \"HC1\" (alias: \"stata\"), \"HC2\", \"HC3\" (alias: \"robust\"), \"HC4\", \"HC4m\", \"HC5\", \"HAC\", \"NeweyWest\", \"Andrews\", \"panel-corrected\", \"outer-product\", \"weave\" use variance-covariance matrices computed using functions sandwich package, equivalent method. behavior functions can (sometimes must) altered passing arguments sandwich directly modelsummary ellipsis (...), safer define custom functions described next bullet. function (named) list functions return variance-covariance matrices row column names equal names coefficient estimates (e.g., stats::vcov, sandwich::vcovHC, function(x) vcovPC(x, cluster=\"country\")). formula (named) list formulas cluster variable(s) right-hand side (e.g., ~clusterid). named list length(models) variance-covariance matrices row column names equal names coefficient estimates. named list length(models) vectors names equal names coefficient estimates. See 'Examples' section . Warning: since list vectors can include arbitrary strings numbers, modelsummary automatically calculate p values. stars argument may thus use incorrect significance thresholds vcov list vectors. conf_level numeric value 0 1. confidence level use confidence intervals. Setting argument NULL extract confidence intervals, can faster models. stars indicate statistical significance FALSE (default): significance stars. TRUE: +=.1, *=.05, **=.01, ***=0.001 Named numeric vector custom stars c('*' = .1, '+' = .05) Note: legend inserted bottom table estimate statistic arguments use \"glue strings\" {stars}. coef_map character vector. Subset, rename, reorder coefficients. Coefficients omitted vector omitted table. order vector determines order table. coef_map can named unnamed character vector. coef_map named vector, values define labels must appear table, names identify original term names stored model object: c(\"hp:mpg\"=\"HPxM/G\"). See Examples section . coef_omit integer vector regular expression identify coefficients omit (keep) table. Positive integers determine coefficients omit. Negative integers determine coefficients keep. regular expression can used omit coefficients, perl-compatible \"negative lookaheads\" can used specify coefficients keep table. Examples: c(2, 3, 5): omits second, third, fifth coefficients. c(-2, -3, -5): negative values keep second, third, fifth coefficients. \"ei\": omit coefficients matching \"ei\" substring. \"^Volume$\": omit \"Volume\" coefficient. \"ei|rc\": omit coefficients matching either \"ei\" \"rc\" substrings. \"^(?!Vol)\": keep coefficients starting \"Vol\" (inverse match using negative lookahead). \"^(?!.*ei)\": keep coefficients matching \"ei\" substring. \"^(?!.*ei|.*pt)\": keep coefficients matching either \"ei\" \"pt\" substrings. See Examples section complete code. coef_rename logical, named unnamed character vector, function Logical: TRUE renames variables based \"label\" attribute column. See Example section . Unnamed character vector length equal number coefficients final table, coef_omit applied. Named character vector: Values refer variable names appear table. Names refer original term names stored model object. Ex: c(\"hp:mpg\"=\"hp X mpg\") Function: Accepts character vector model's term names returns named vector like one described . modelsummary package supplies coef_rename() function can common cleaning tasks: modelsummary(model, coef_rename = coef_rename) gof_map rename, reorder, omit goodness--fit statistics model information. argument accepts 4 types values: NULL (default): modelsummary::gof_map dictionary used formatting, unknown statistic included. character vector: \"\", \"none\", vector statistics c(\"rmse\", \"nobs\", \"r.squared\"). Elements correspond colnames data.frame produced get_gof(model). modelsummary::gof_map default dictionary used format rename statistics. NA: excludes statistics bottom part table. data.frame 3 columns named \"raw\", \"clean\", \"fmt\". Unknown statistics omitted. See 'Examples' section . list lists, includes 3 elements named \"raw\", \"clean\", \"fmt\". Unknown statistics omitted. See 'Examples section '. gof_omit string regular expression (perl-compatible) used determine statistics omit bottom section table. \"negative lookahead\" can used specify statistics keep table. Examples: \"IC\": omit statistics matching \"IC\" substring. \"BIC|AIC\": omit statistics matching \"AIC\" \"BIC\" substrings. \"^(?!.*IC)\": keep statistics matching \"IC\" substring.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/panelsummary_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a regression data.frame to manually edit further — panelsummary_raw","text":"kableExtra object instantly customizable kableExtra's suite functions.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/panelsummary_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a regression data.frame to manually edit further — panelsummary_raw","text":"","code":"## Using panelsummary_raw  ols_1 <- mtcars |> fixest::feols(mpg ~  cyl | gear + carb, cluster = ~hp, nthreads = 2)  panelsummary_raw(ols_1, ols_1) #>              term Model 1 #> 1             cyl  -0.907 #> 2                 (0.789) #> 3        Num.Obs.      32 #> 4              R2   0.818 #> 5         R2 Adj.   0.755 #> 6       R2 Within   0.058 #> 7  R2 Within Adj.   0.017 #> 8             AIC   168.3 #> 9             BIC   181.4 #> 10           RMSE    2.53 #> 11     Std.Errors  by: hp #> 12       FE: gear       X #> 13       FE: carb       X #> 14            cyl  -0.907 #> 15                (0.789) #> 16       Num.Obs.      32 #> 17             R2   0.818 #> 18        R2 Adj.   0.755 #> 19      R2 Within   0.058 #> 20 R2 Within Adj.   0.017 #> 21            AIC   168.3 #> 22            BIC   181.4 #> 23           RMSE    2.53 #> 24     Std.Errors  by: hp #> 25       FE: gear       X #> 26       FE: carb       X   ## Including multiple models------------------  panelsummary_raw(list(ols_1, ols_1, ols_1), ols_1,               caption = \"Multiple models\",               stars = TRUE) #>              term Model 1 Model 2 Model 3 #> 1             cyl  -0.907  -0.907  -0.907 #> 2                 (0.789) (0.789) (0.789) #> 3        Num.Obs.      32      32      32 #> 4              R2   0.818   0.818   0.818 #> 5         R2 Adj.   0.755   0.755   0.755 #> 6       R2 Within   0.058   0.058   0.058 #> 7  R2 Within Adj.   0.017   0.017   0.017 #> 8             AIC   168.3   168.3   168.3 #> 9             BIC   181.4   181.4   181.4 #> 10           RMSE    2.53    2.53    2.53 #> 11     Std.Errors  by: hp  by: hp  by: hp #> 12       FE: gear       X       X       X #> 13       FE: carb       X       X       X #> 14            cyl  -0.907                 #> 15                (0.789)                 #> 16       Num.Obs.      32                 #> 17             R2   0.818                 #> 18        R2 Adj.   0.755                 #> 19      R2 Within   0.058                 #> 20 R2 Within Adj.   0.017                 #> 21            AIC   168.3                 #> 22            BIC   181.4                 #> 23           RMSE    2.53                 #> 24     Std.Errors  by: hp                 #> 25       FE: gear       X                 #> 26       FE: carb       X"},{"path":"https://michaeltopper1.github.io/panelsummary/reference/remove_fe.html","id":null,"dir":"Reference","previous_headings":"","what":"removes all fixed effects except the final panel (for collapse_fe) — remove_fe","title":"removes all fixed effects except the final panel (for collapse_fe) — remove_fe","text":"removes fixed effects except final panel (collapse_fe)","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/remove_fe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"removes all fixed effects except the final panel (for collapse_fe) — remove_fe","text":"","code":"remove_fe(panel_df, num_panels)"},{"path":"https://michaeltopper1.github.io/panelsummary/reference/shift_means.html","id":null,"dir":"Reference","previous_headings":"","what":"shifts the custom glance means to above observations and renames — shift_means","title":"shifts the custom glance means to above observations and renames — shift_means","text":"shifts custom glance means observations renames","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/reference/shift_means.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"shifts the custom glance means to above observations and renames — shift_means","text":"","code":"shift_means(df)"},{"path":"https://michaeltopper1.github.io/panelsummary/news/index.html","id":"panelsummary-012","dir":"Changelog","previous_headings":"","what":"panelsummary 0.1.2","title":"panelsummary 0.1.2","text":"New pretty_num argument large numbers commas.","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/news/index.html","id":"panelsummary-011","dir":"Changelog","previous_headings":"","what":"panelsummary 0.1.1","title":"panelsummary 0.1.1","text":"CRAN release: 2023-03-15 Updated fix modelsummary 1.3 breaking change update. Package now depends modelsummary version 1.3 .","code":""},{"path":"https://michaeltopper1.github.io/panelsummary/news/index.html","id":"panelsummary-010","dir":"Changelog","previous_headings":"","what":"panelsummary 0.1.0","title":"panelsummary 0.1.0","text":"CRAN release: 2022-12-20 Added NEWS.md file track changes package.","code":""}]
